{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { createElement, Browser } from '@syncfusion/ej2-base';\nimport { triggerDownload } from '../utils/helper';\n/**\n * This module enables the export to Image functionality in Maps control.\n *\n * @hidden\n */\n\nvar ImageExport =\n/** @class */\nfunction () {\n  /**\n   * Constructor for Maps\n   *\n   * @param {Maps} control - Specifies the instance of the map\n   */\n  function ImageExport(control) {\n    this.control = control;\n  }\n  /**\n   * To export the file as image/svg format\n   *\n   * @param {ExportType} type - Specifies the type of the image file\n   * @param {string} fileName - Specifies the file name of the image file\n   * @param {boolean} allowDownload - Specifies whether to download image as a file or not.\n   * @returns {Promise<string>} - Returns the promise string.\n   * @private\n   */\n\n\n  ImageExport.prototype.export = function (type, fileName, allowDownload) {\n    var _this = this; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    var promise = new Promise(function (resolve, reject) {\n      var imageCanvasElement = createElement('canvas', {\n        id: 'ej2-canvas',\n        attrs: {\n          'width': _this.control.availableSize.width.toString(),\n          'height': _this.control.availableSize.height.toString()\n        }\n      });\n      var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n      var toolbarEle = document.getElementById(_this.control.element.id + '_ToolBar');\n      var svgParent = document.getElementById(_this.control.element.id + '_Tile_SVG_Parent');\n      var svgDataElement;\n\n      if (!_this.control.isTileMap) {\n        svgDataElement = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' + _this.control.svgObject.outerHTML + '</svg>';\n      } else {\n        var tileSvg = document.getElementById(_this.control.element.id + '_Tile_SVG');\n        svgDataElement = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' + _this.control.svgObject.outerHTML + tileSvg.outerHTML + '</svg>';\n      }\n\n      var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgDataElement] : [new XMLSerializer().serializeToString(_this.control.svgObject)], {\n        type: 'image/svg+xml'\n      }));\n\n      if (type === 'SVG') {\n        if (allowDownload) {\n          triggerDownload(fileName, type, url, isDownload);\n        } else {\n          resolve(null);\n        }\n      } else {\n        var image_1 = new Image();\n        var ctxt_1 = imageCanvasElement.getContext('2d');\n\n        if (!_this.control.isTileMap) {\n          image_1.onload = function () {\n            ctxt_1.drawImage(image_1, 0, 0);\n            window.URL.revokeObjectURL(url);\n\n            if (allowDownload) {\n              triggerDownload(fileName, type, imageCanvasElement.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n            } else {\n              if (type === 'PNG') {\n                resolve(imageCanvasElement.toDataURL('image/png'));\n              } else if (type === 'JPEG') {\n                resolve(imageCanvasElement.toDataURL('image/jpeg'));\n              }\n            }\n          };\n\n          image_1.src = url;\n        } else {\n          var imgxHttp = new XMLHttpRequest();\n          var imgTileLength_1 = _this.control.mapLayerPanel.tiles.length;\n\n          var _loop_1 = function (i) {\n            var tile = document.getElementById(_this.control.element.id + '_tile_' + (i - 1));\n            var exportTileImg = new Image();\n            exportTileImg.crossOrigin = 'Anonymous';\n            ctxt_1.fillStyle = _this.control.background ? _this.control.background : '#FFFFFF';\n            ctxt_1.fillRect(0, 0, _this.control.availableSize.width, _this.control.availableSize.height);\n            ctxt_1.font = _this.control.titleSettings.textStyle.size + ' Arial';\n            ctxt_1.fillStyle = document.getElementById(_this.control.element.id + '_Map_title').getAttribute('fill');\n            ctxt_1.fillText(_this.control.titleSettings.text, parseFloat(document.getElementById(_this.control.element.id + '_Map_title').getAttribute('x')), parseFloat(document.getElementById(_this.control.element.id + '_Map_title').getAttribute('y')));\n\n            exportTileImg.onload = function () {\n              if (i === 0 || i === imgTileLength_1 + 1) {\n                if (i === 0) {\n                  ctxt_1.setTransform(1, 0, 0, 1, 0, 0);\n                  ctxt_1.rect(0, parseFloat(svgParent.style.top), parseFloat(svgParent.style.width), parseFloat(svgParent.style.height));\n                  ctxt_1.clip();\n                } else {\n                  ctxt_1.setTransform(1, 0, 0, 1, parseFloat(svgParent.style.left), parseFloat(svgParent.style.top));\n                }\n              } else {\n                ctxt_1.setTransform(1, 0, 0, 1, parseFloat(tile.style.left) + 10, parseFloat(tile.style.top) + parseFloat(document.getElementById(_this.control.element.id + '_tile_parent').style.top));\n              }\n\n              ctxt_1.drawImage(exportTileImg, 0, 0);\n\n              if (i === imgTileLength_1 + 1) {\n                localStorage.setItem('local-canvasImage', imageCanvasElement.toDataURL('image/png'));\n                var localBase64 = localStorage.getItem('local-canvasImage');\n\n                if (allowDownload) {\n                  triggerDownload(fileName, type, localBase64, isDownload);\n                  localStorage.removeItem('local-canvasImage');\n                } else {\n                  if (type === 'PNG') {\n                    resolve(localBase64);\n                  } else if (type === 'JPEG') {\n                    resolve(imageCanvasElement.toDataURL('image/jpeg'));\n                  }\n                }\n              }\n            };\n\n            if (i === 0 || i === imgTileLength_1 + 1) {\n              if (i === 0) {\n                exportTileImg.src = url;\n              } else {\n                setTimeout(function () {\n                  exportTileImg.src = window.URL.createObjectURL(new Blob([new XMLSerializer().serializeToString(document.getElementById(_this.control.element.id + '_Tile_SVG'))], {\n                    type: 'image/svg+xml'\n                  }));\n                }, 300);\n              }\n            } else {\n              imgxHttp.open('GET', tile.children[0].getAttribute('src'), true);\n              imgxHttp.send();\n              exportTileImg.src = tile.children[0].getAttribute('src');\n            }\n          };\n\n          for (var i = 0; i <= imgTileLength_1 + 1; i++) {\n            _loop_1(i);\n          }\n        }\n      }\n    });\n    return promise;\n  };\n  /**\n   * Get module name.\n   *\n   * @returns {string} - Returns the module name\n   */\n\n\n  ImageExport.prototype.getModuleName = function () {\n    return 'ImageExport';\n  };\n  /**\n   * To destroy the ImageExport.\n   *\n   * @param {Maps} maps - Specifies the instance of the maps.\n   * @returns {void}\n   * @private\n   */\n\n\n  ImageExport.prototype.destroy = function (maps) {\n    /**\n     * Destroy method performed here\n     */\n  };\n\n  return ImageExport;\n}();\n\nexport { ImageExport };","map":{"version":3,"sources":["C:/Users/vinay/Desktop/world-map-dashboard/world-map/node_modules/@syncfusion/ej2-maps/src/maps/model/export-image.js"],"names":["createElement","Browser","triggerDownload","ImageExport","control","prototype","export","type","fileName","allowDownload","_this","promise","Promise","resolve","reject","imageCanvasElement","id","attrs","availableSize","width","toString","height","isDownload","userAgent","indexOf","toolbarEle","document","getElementById","element","svgParent","svgDataElement","isTileMap","svgObject","outerHTML","tileSvg","url","window","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image_1","Image","ctxt_1","getContext","onload","drawImage","revokeObjectURL","toDataURL","replace","src","imgxHttp","XMLHttpRequest","imgTileLength_1","mapLayerPanel","tiles","length","_loop_1","i","tile","exportTileImg","crossOrigin","fillStyle","background","fillRect","font","titleSettings","textStyle","size","getAttribute","fillText","text","parseFloat","setTransform","rect","style","top","clip","left","localStorage","setItem","localBase64","getItem","removeItem","setTimeout","open","children","send","getModuleName","destroy","maps"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { createElement, Browser } from '@syncfusion/ej2-base';\nimport { triggerDownload } from '../utils/helper';\n/**\n * This module enables the export to Image functionality in Maps control.\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {Maps} control - Specifies the instance of the map\n     */\n    function ImageExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the image file\n     * @param {string} fileName - Specifies the file name of the image file\n     * @param {boolean} allowDownload - Specifies whether to download image as a file or not.\n     * @returns {Promise<string>} - Returns the promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var imageCanvasElement = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var toolbarEle = document.getElementById(_this.control.element.id + '_ToolBar');\n            var svgParent = document.getElementById(_this.control.element.id + '_Tile_SVG_Parent');\n            var svgDataElement;\n            if (!_this.control.isTileMap) {\n                svgDataElement = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                    _this.control.svgObject.outerHTML + '</svg>';\n            }\n            else {\n                var tileSvg = document.getElementById(_this.control.element.id + '_Tile_SVG');\n                svgDataElement = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                    _this.control.svgObject.outerHTML + tileSvg.outerHTML + '</svg>';\n            }\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgDataElement] :\n                [(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var ctxt_1 = imageCanvasElement.getContext('2d');\n                if (!_this.control.isTileMap) {\n                    image_1.onload = (function () {\n                        ctxt_1.drawImage(image_1, 0, 0);\n                        window.URL.revokeObjectURL(url);\n                        if (allowDownload) {\n                            triggerDownload(fileName, type, imageCanvasElement.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                        }\n                        else {\n                            if (type === 'PNG') {\n                                resolve(imageCanvasElement.toDataURL('image/png'));\n                            }\n                            else if (type === 'JPEG') {\n                                resolve(imageCanvasElement.toDataURL('image/jpeg'));\n                            }\n                        }\n                    });\n                    image_1.src = url;\n                }\n                else {\n                    var imgxHttp = new XMLHttpRequest();\n                    var imgTileLength_1 = _this.control.mapLayerPanel.tiles.length;\n                    var _loop_1 = function (i) {\n                        var tile = document.getElementById(_this.control.element.id + '_tile_' + (i - 1));\n                        var exportTileImg = new Image();\n                        exportTileImg.crossOrigin = 'Anonymous';\n                        ctxt_1.fillStyle = _this.control.background ? _this.control.background : '#FFFFFF';\n                        ctxt_1.fillRect(0, 0, _this.control.availableSize.width, _this.control.availableSize.height);\n                        ctxt_1.font = _this.control.titleSettings.textStyle.size + ' Arial';\n                        ctxt_1.fillStyle = document.getElementById(_this.control.element.id + '_Map_title').getAttribute('fill');\n                        ctxt_1.fillText(_this.control.titleSettings.text, parseFloat(document.getElementById(_this.control.element.id + '_Map_title').getAttribute('x')), parseFloat(document.getElementById(_this.control.element.id + '_Map_title').getAttribute('y')));\n                        exportTileImg.onload = (function () {\n                            if (i === 0 || i === imgTileLength_1 + 1) {\n                                if (i === 0) {\n                                    ctxt_1.setTransform(1, 0, 0, 1, 0, 0);\n                                    ctxt_1.rect(0, parseFloat(svgParent.style.top), parseFloat(svgParent.style.width), parseFloat(svgParent.style.height));\n                                    ctxt_1.clip();\n                                }\n                                else {\n                                    ctxt_1.setTransform(1, 0, 0, 1, parseFloat(svgParent.style.left), parseFloat(svgParent.style.top));\n                                }\n                            }\n                            else {\n                                ctxt_1.setTransform(1, 0, 0, 1, parseFloat(tile.style.left) + 10, parseFloat(tile.style.top) +\n                                    (parseFloat(document.getElementById(_this.control.element.id + '_tile_parent').style.top)));\n                            }\n                            ctxt_1.drawImage(exportTileImg, 0, 0);\n                            if (i === imgTileLength_1 + 1) {\n                                localStorage.setItem('local-canvasImage', imageCanvasElement.toDataURL('image/png'));\n                                var localBase64 = localStorage.getItem('local-canvasImage');\n                                if (allowDownload) {\n                                    triggerDownload(fileName, type, localBase64, isDownload);\n                                    localStorage.removeItem('local-canvasImage');\n                                }\n                                else {\n                                    if (type === 'PNG') {\n                                        resolve(localBase64);\n                                    }\n                                    else if (type === 'JPEG') {\n                                        resolve(imageCanvasElement.toDataURL('image/jpeg'));\n                                    }\n                                }\n                            }\n                        });\n                        if (i === 0 || i === imgTileLength_1 + 1) {\n                            if (i === 0) {\n                                exportTileImg.src = url;\n                            }\n                            else {\n                                setTimeout(function () {\n                                    exportTileImg.src = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(document.getElementById(_this.control.element.id + '_Tile_SVG'))], { type: 'image/svg+xml' }));\n                                }, 300);\n                            }\n                        }\n                        else {\n                            imgxHttp.open('GET', tile.children[0].getAttribute('src'), true);\n                            imgxHttp.send();\n                            exportTileImg.src = tile.children[0].getAttribute('src');\n                        }\n                    };\n                    for (var i = 0; i <= imgTileLength_1 + 1; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n        });\n        return promise;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    ImageExport.prototype.getModuleName = function () {\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @param {Maps} maps - Specifies the instance of the maps.\n     * @returns {void}\n     * @private\n     */\n    ImageExport.prototype.destroy = function (maps) {\n        /**\n         * Destroy method performed here\n         */\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n"]},"metadata":{},"sourceType":"module"}