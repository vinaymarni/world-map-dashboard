{"ast":null,"code":"import { ColorValue } from '../index';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getValueFromObject } from '../utils/helper';\n/**\n * ColorMapping class\n */\n\nvar ColorMapping =\n/** @class */\nfunction () {\n  function ColorMapping(maps) {\n    this.maps = maps;\n  }\n  /**\n   * To get color based on shape settings.\n   *\n   * @param { ShapeSettingsModel } shapeSettings - Specifies the shape settings.\n   * @param { object } layerData - Specifies the layer data.\n   * @param { string } color - Specifies the color.\n   * @returns {Object} - Returns the object.\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  ColorMapping.prototype.getShapeColorMapping = function (shapeSettings, layerData, color) {\n    var colorValuePath = shapeSettings.colorValuePath ? shapeSettings.colorValuePath : shapeSettings.valuePath;\n    var equalValue = !isNullOrUndefined(colorValuePath) ? colorValuePath.indexOf('.') > -1 ? getValueFromObject(layerData, colorValuePath) : layerData[colorValuePath] : layerData[colorValuePath];\n    var colorValue = Number(equalValue); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    var shapeColor = this.getColorByValue(shapeSettings.colorMapping, colorValue, equalValue);\n    return !isNullOrUndefined(shapeColor) ? shapeColor : color;\n  };\n  /**\n   * To color by value and color mapping\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  ColorMapping.prototype.getColorByValue = function (colorMapping, colorValue, equalValue) {\n    if (isNaN(colorValue) && isNullOrUndefined(equalValue)) {\n      return null;\n    }\n\n    var fill = '';\n    var opacity;\n    var gradientColor;\n    var gradientFill;\n\n    for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n      var colorMap = colorMapping_1[_i];\n\n      if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) && colorValue >= colorMap.from && colorValue <= colorMap.to || colorMap.value === equalValue) {\n        if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n          if (!isNullOrUndefined(colorMap.value)) {\n            fill = colorMap.color[0];\n          } else {\n            gradientFill = this.getColor(colorMap, colorValue);\n            fill = gradientFill;\n          }\n        } else {\n          fill = colorMap.color;\n        }\n      }\n\n      if ((colorValue >= colorMap.from && colorValue <= colorMap.to || colorMap.value === equalValue) && !isNullOrUndefined(colorMap.minOpacity) && !isNullOrUndefined(colorMap.maxOpacity) && fill) {\n        opacity = this.deSaturationColor(colorMap, fill, colorValue, equalValue);\n      }\n\n      if ((fill === '' || isNullOrUndefined(fill)) && isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to) && isNullOrUndefined(colorMap.minOpacity) && isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value)) {\n        fill = Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n      }\n    }\n\n    return {\n      fill: fill || (!colorMapping.length ? equalValue : null),\n      opacity: opacity\n    };\n  };\n\n  ColorMapping.prototype.deSaturationColor = function (colorMapping, color, rangeValue, equalValue) {\n    var opacity = 1;\n\n    if (rangeValue >= colorMapping.from && rangeValue <= colorMapping.to || colorMapping.value === equalValue) {\n      var ratio = !isNaN(rangeValue) ? (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from) : colorMapping.from / (colorMapping.to - colorMapping.from);\n      opacity = ratio * (colorMapping.maxOpacity - colorMapping.minOpacity) + colorMapping.minOpacity;\n    }\n\n    return opacity;\n  };\n\n  ColorMapping.prototype.rgbToHex = function (r, g, b) {\n    return '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n  };\n\n  ColorMapping.prototype.componentToHex = function (value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n  };\n\n  ColorMapping.prototype.getColor = function (colorMap, value) {\n    var color = '';\n    var rbg;\n\n    if (Number(value) === colorMap.from) {\n      color = colorMap.color[0];\n    } else if (Number(value) === colorMap.to) {\n      color = colorMap.color[colorMap.color.length - 1];\n    } else {\n      rbg = this.getGradientColor(Number(value), colorMap);\n      color = this.rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n\n    return color;\n  };\n\n  ColorMapping.prototype.getGradientColor = function (value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n\n    if (colorMap.color.length <= 2) {\n      previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : this._colorNameToHex(colorMap.color[0]);\n      nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ? colorMap.color[colorMap.color.length - 1] : this._colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    } else {\n      previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : this._colorNameToHex(colorMap.color[0]);\n      nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ? colorMap.color[colorMap.color.length - 1] : this._colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n      var a = full / (colorMap.color.length - 1);\n      var b = void 0;\n      var c = void 0;\n      var length_1 = colorMap.color.length - 1; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      var splitColorValueOffset = [];\n      var splitColor = {};\n\n      for (var j = 1; j < length_1; j++) {\n        c = j * a;\n        b = previousOffset + c;\n        splitColor = {\n          b: b,\n          color: colorMap.color[j]\n        };\n        splitColorValueOffset.push(splitColor);\n      }\n\n      for (var i = 0; i < splitColorValueOffset.length; i++) {\n        if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n          midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ? splitColorValueOffset[i]['color'] : this._colorNameToHex(splitColorValueOffset[i]['color']);\n          nextColor = midColor;\n          percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n        } else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === splitColorValueOffset.length - 1) {\n          midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ? splitColorValueOffset[i]['color'] : this._colorNameToHex(splitColorValueOffset[i]['color']);\n          previousColor = midColor;\n          percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n        }\n\n        if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n          if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n            midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ? splitColorValueOffset[i]['color'] : this._colorNameToHex(splitColorValueOffset[i]['color']);\n            previousColor = midColor;\n            nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ? splitColorValueOffset[i + 1]['color'] : this._colorNameToHex(splitColorValueOffset[i + 1]['color']);\n            percent = Math.abs(value - splitColorValueOffset[i + 1]['b']) / a;\n          }\n        }\n      }\n    }\n\n    return this.getPercentageColor(percent, previousColor, nextColor);\n  };\n\n  ColorMapping.prototype.getPercentageColor = function (percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = this.getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = this.getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = this.getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n  };\n\n  ColorMapping.prototype.getPercentage = function (percent, previous, next) {\n    var full = next - previous;\n    return Math.round(previous + full * percent);\n  };\n\n  ColorMapping.prototype._colorNameToHex = function (color) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var colors = {\n      'aliceblue': '#f0f8ff',\n      'antiquewhite': '#faebd7',\n      'aqua': '#00ffff',\n      'aquamarine': '#7fffd4',\n      'azure': '#f0ffff',\n      'beige': '#f5f5dc',\n      'bisque': '#ffe4c4',\n      'black': '#000000',\n      'blanchedalmond': '#ffebcd',\n      'blue': '#0000ff',\n      'blueviolet': '#8a2be2',\n      'brown': '#a52a2a',\n      'burlywood': '#deb887',\n      'cadetblue': '#5f9ea0',\n      'chartreuse': '#7fff00',\n      'chocolate': '#d2691e',\n      'coral': '#ff7f50',\n      'cornflowerblue': '#6495ed',\n      'cornsilk': '#fff8dc',\n      'crimson': '#dc143c',\n      'cyan': '#00ffff',\n      'darkblue': '#00008b',\n      'darkcyan': '#008b8b',\n      'darkgoldenrod': '#b8860b',\n      'darkgray': '#a9a9a9',\n      'darkgreen': '#006400',\n      'darkkhaki': '#bdb76b',\n      'darkmagenta': '#8b008b',\n      'darkolivegreen': '#556b2f',\n      'darkorange': '#ff8c00',\n      'darkorchid': '#9932cc',\n      'darkred': '#8b0000',\n      'darksalmon': '#e9967a',\n      'darkseagreen': '#8fbc8f',\n      'darkslateblue': '#483d8b',\n      'darkslategray': '#2f4f4f',\n      'darkturquoise': '#00ced1',\n      'darkviolet': '#9400d3',\n      'deeppink': '#ff1493',\n      'deepskyblue': '#00bfff',\n      'dimgray': '#696969',\n      'dodgerblue': '#1e90ff',\n      'firebrick': '#b22222',\n      'floralwhite': '#fffaf0',\n      'forestgreen': '#228b22',\n      'fuchsia': '#ff00ff',\n      'gainsboro': '#dcdcdc',\n      'ghostwhite': '#f8f8ff',\n      'gold': '#ffd700',\n      'goldenrod': '#daa520',\n      'gray': '#808080',\n      'green': '#008000',\n      'greenyellow': '#adff2f',\n      'honeydew': '#f0fff0',\n      'hotpink': '#ff69b4',\n      'indianred ': '#cd5c5c',\n      'indigo ': '#4b0082',\n      'ivory': '#fffff0',\n      'khaki': '#f0e68c',\n      'lavender': '#e6e6fa',\n      'lavenderblush': '#fff0f5',\n      'lawngreen': '#7cfc00',\n      'lemonchiffon': '#fffacd',\n      'lightblue': '#add8e6',\n      'lightcoral': '#f08080',\n      'lightcyan': '#e0ffff',\n      'lightgoldenrodyellow': '#fafad2',\n      'lightgrey': '#d3d3d3',\n      'lightgreen': '#90ee90',\n      'lightpink': '#ffb6c1',\n      'lightsalmon': '#ffa07a',\n      'lightseagreen': '#20b2aa',\n      'lightskyblue': '#87cefa',\n      'lightslategray': '#778899',\n      'lightsteelblue': '#b0c4de',\n      'lightyellow': '#ffffe0',\n      'lime': '#00ff00',\n      'limegreen': '#32cd32',\n      'linen': '#faf0e6',\n      'magenta': '#ff00ff',\n      'maroon': '#800000',\n      'mediumaquamarine': '#66cdaa',\n      'mediumblue': '#0000cd',\n      'mediumorchid': '#ba55d3',\n      'mediumpurple': '#9370d8',\n      'mediumseagreen': '#3cb371',\n      'mediumslateblue': '#7b68ee',\n      'mediumspringgreen': '#00fa9a',\n      'mediumturquoise': '#48d1cc',\n      'mediumvioletred': '#c71585',\n      'midnightblue': '#191970',\n      'mintcream': '#f5fffa',\n      'mistyrose': '#ffe4e1',\n      'moccasin': '#ffe4b5',\n      'navajowhite': '#ffdead',\n      'navy': '#000080',\n      'orchid': '#da70d6',\n      'papayawhip': '#ffefd5',\n      'oldlace': '#fdf5e6',\n      'olive': '#808000',\n      'olivedrab': '#6b8e23',\n      'orange': '#ffa500',\n      'orangered': '#ff4500',\n      'palegoldenrod': '#eee8aa',\n      'palegreen': '#98fb98',\n      'paleturquoise': '#afeeee',\n      'palevioletred': '#d87093',\n      'peachpuff': '#ffdab9',\n      'peru': '#cd853f',\n      'pink': '#ffc0cb',\n      'plum': '#dda0dd',\n      'powderblue': '#b0e0e6',\n      'purple': '#800080',\n      'red': '#ff0000',\n      'rosybrown': '#bc8f8f',\n      'royalblue': '#4169e1',\n      'saddlebrown': '#8b4513',\n      'salmon': '#fa8072',\n      'sandybrown': '#f4a460',\n      'seagreen': '#2e8b57',\n      'seashell': '#fff5ee',\n      'sienna': '#a0522d',\n      'silver': '#c0c0c0',\n      'skyblue': '#87ceeb',\n      'slateblue': '#6a5acd',\n      'slategray': '#708090',\n      'snow': '#fffafa',\n      'springgreen': '#00ff7f',\n      'steelblue': '#4682b4',\n      'tan': '#d2b48c',\n      'teal': '#008080',\n      'thistle': '#d8bfd8',\n      'tomato': '#ff6347',\n      'turquoise': '#40e0d0',\n      'violet': '#ee82ee',\n      'wheat': '#f5deb3',\n      'white': '#ffffff',\n      'whitesmoke': '#f5f5f5',\n      'yellow': '#ffff00',\n      'yellowgreen': '#9acd32'\n    };\n\n    if (Object.prototype.toString.call(color) === '[object Array]') {\n      return color;\n    }\n\n    if (typeof colors[color.toLowerCase()] !== 'undefined') {\n      return colors[color.toLowerCase()];\n    }\n\n    return color;\n  };\n\n  return ColorMapping;\n}();\n\nexport { ColorMapping };","map":{"version":3,"sources":["C:/Users/vinay/Desktop/world-map-dashboard/world-map/node_modules/@syncfusion/ej2-maps/src/maps/layers/color-mapping.js"],"names":["ColorValue","isNullOrUndefined","getValueFromObject","ColorMapping","maps","prototype","getShapeColorMapping","shapeSettings","layerData","color","colorValuePath","valuePath","equalValue","indexOf","colorValue","Number","shapeColor","getColorByValue","colorMapping","isNaN","fill","opacity","gradientColor","gradientFill","_i","colorMapping_1","length","colorMap","from","to","value","Object","toString","call","getColor","minOpacity","maxOpacity","deSaturationColor","rangeValue","ratio","rgbToHex","r","g","b","componentToHex","hex","rbg","getGradientColor","previousOffset","nextOffset","percent","prev1","full","midColor","midreturn","previousColor","nextColor","charAt","_colorNameToHex","a","c","length_1","splitColorValueOffset","splitColor","j","push","i","Math","abs","getPercentageColor","previous","next","split","prevColor","getPercentage","parseInt","substr","round","colors","toLowerCase"],"mappings":"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","sourcesContent":["import { ColorValue } from '../index';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getValueFromObject } from '../utils/helper';\n/**\n * ColorMapping class\n */\nvar ColorMapping = /** @class */ (function () {\n    function ColorMapping(maps) {\n        this.maps = maps;\n    }\n    /**\n     * To get color based on shape settings.\n     *\n     * @param { ShapeSettingsModel } shapeSettings - Specifies the shape settings.\n     * @param { object } layerData - Specifies the layer data.\n     * @param { string } color - Specifies the color.\n     * @returns {Object} - Returns the object.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ColorMapping.prototype.getShapeColorMapping = function (shapeSettings, layerData, color) {\n        var colorValuePath = shapeSettings.colorValuePath ? shapeSettings.colorValuePath : shapeSettings.valuePath;\n        var equalValue = (!isNullOrUndefined(colorValuePath)) ? ((colorValuePath.indexOf('.') > -1) ?\n            getValueFromObject(layerData, colorValuePath) : layerData[colorValuePath]) : layerData[colorValuePath];\n        var colorValue = Number(equalValue);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var shapeColor = this.getColorByValue(shapeSettings.colorMapping, colorValue, equalValue);\n        return !isNullOrUndefined(shapeColor) ? shapeColor : color;\n    };\n    /**\n     * To color by value and color mapping\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ColorMapping.prototype.getColorByValue = function (colorMapping, colorValue, equalValue) {\n        if (isNaN(colorValue) && isNullOrUndefined(equalValue)) {\n            return null;\n        }\n        var fill = '';\n        var opacity;\n        var gradientColor;\n        var gradientFill;\n        for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n            var colorMap = colorMapping_1[_i];\n            if ((!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to)\n                && (colorValue >= colorMap.from && colorValue <= colorMap.to)) ||\n                (colorMap.value === equalValue)) {\n                if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                    if (!isNullOrUndefined(colorMap.value)) {\n                        fill = colorMap.color[0];\n                    }\n                    else {\n                        gradientFill = this.getColor(colorMap, colorValue);\n                        fill = gradientFill;\n                    }\n                }\n                else {\n                    fill = colorMap.color;\n                }\n            }\n            if (((colorValue >= colorMap.from && colorValue <= colorMap.to) || (colorMap.value === equalValue))\n                && (!isNullOrUndefined(colorMap.minOpacity) && !isNullOrUndefined(colorMap.maxOpacity) && fill)) {\n                opacity = this.deSaturationColor(colorMap, fill, colorValue, equalValue);\n            }\n            if ((fill === '' || isNullOrUndefined(fill)) && isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                && isNullOrUndefined(colorMap.minOpacity) && isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value)) {\n                fill = Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n            }\n        }\n        return { fill: fill || ((!colorMapping.length) ? equalValue : null), opacity: opacity };\n    };\n    ColorMapping.prototype.deSaturationColor = function (colorMapping, color, rangeValue, equalValue) {\n        var opacity = 1;\n        if (((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to) || colorMapping.value === equalValue)) {\n            var ratio = !isNaN(rangeValue) ? (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from) :\n                colorMapping.from / (colorMapping.to - colorMapping.from);\n            opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n        }\n        return opacity;\n    };\n    ColorMapping.prototype.rgbToHex = function (r, g, b) {\n        return '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n    };\n    ColorMapping.prototype.componentToHex = function (value) {\n        var hex = value.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    ColorMapping.prototype.getColor = function (colorMap, value) {\n        var color = '';\n        var rbg;\n        if (Number(value) === colorMap.from) {\n            color = colorMap.color[0];\n        }\n        else if (Number(value) === colorMap.to) {\n            color = colorMap.color[colorMap.color.length - 1];\n        }\n        else {\n            rbg = this.getGradientColor(Number(value), colorMap);\n            color = this.rgbToHex(rbg.r, rbg.g, rbg.b);\n        }\n        return color;\n    };\n    ColorMapping.prototype.getGradientColor = function (value, colorMap) {\n        var previousOffset = colorMap.from;\n        var nextOffset = colorMap.to;\n        var percent = 0;\n        var prev1;\n        var full = nextOffset - previousOffset;\n        var midColor;\n        var midreturn;\n        percent = (value - previousOffset) / full;\n        var previousColor;\n        var nextColor;\n        if (colorMap.color.length <= 2) {\n            previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : this._colorNameToHex(colorMap.color[0]);\n            nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n                colorMap.color[colorMap.color.length - 1] : this._colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        }\n        else {\n            previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : this._colorNameToHex(colorMap.color[0]);\n            nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n                colorMap.color[colorMap.color.length - 1] : this._colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n            var a = full / (colorMap.color.length - 1);\n            var b = void 0;\n            var c = void 0;\n            var length_1 = colorMap.color.length - 1;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var splitColorValueOffset = [];\n            var splitColor = {};\n            for (var j = 1; j < length_1; j++) {\n                c = j * a;\n                b = previousOffset + c;\n                splitColor = { b: b, color: colorMap.color[j] };\n                splitColorValueOffset.push(splitColor);\n            }\n            for (var i = 0; i < splitColorValueOffset.length; i++) {\n                if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : this._colorNameToHex(splitColorValueOffset[i]['color']);\n                    nextColor = midColor;\n                    percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                        : (value - splitColorValueOffset[i]['b']) / a;\n                }\n                else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : this._colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    percent = value < splitColorValueOffset[i]['b'] ?\n                        1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n                }\n                if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                    if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                        midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                            splitColorValueOffset[i]['color'] : this._colorNameToHex(splitColorValueOffset[i]['color']);\n                        previousColor = midColor;\n                        nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                            splitColorValueOffset[i + 1]['color'] : this._colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                        percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                    }\n                }\n            }\n        }\n        return this.getPercentageColor(percent, previousColor, nextColor);\n    };\n    ColorMapping.prototype.getPercentageColor = function (percent, previous, next) {\n        var nextColor = next.split('#')[1];\n        var prevColor = previous.split('#')[1];\n        var r = this.getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n        var g = this.getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n        var b = this.getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n        return new ColorValue(r, g, b);\n    };\n    ColorMapping.prototype.getPercentage = function (percent, previous, next) {\n        var full = next - previous;\n        return Math.round((previous + (full * percent)));\n    };\n    ColorMapping.prototype._colorNameToHex = function (color) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var colors = {\n            'aliceblue': '#f0f8ff', 'antiquewhite': '#faebd7', 'aqua': '#00ffff', 'aquamarine': '#7fffd4', 'azure': '#f0ffff',\n            'beige': '#f5f5dc', 'bisque': '#ffe4c4', 'black': '#000000', 'blanchedalmond': '#ffebcd', 'blue': '#0000ff',\n            'blueviolet': '#8a2be2', 'brown': '#a52a2a', 'burlywood': '#deb887',\n            'cadetblue': '#5f9ea0', 'chartreuse': '#7fff00', 'chocolate': '#d2691e', 'coral': '#ff7f50',\n            'cornflowerblue': '#6495ed', 'cornsilk': '#fff8dc', 'crimson': '#dc143c', 'cyan': '#00ffff',\n            'darkblue': '#00008b', 'darkcyan': '#008b8b', 'darkgoldenrod': '#b8860b', 'darkgray': '#a9a9a9', 'darkgreen': '#006400',\n            'darkkhaki': '#bdb76b', 'darkmagenta': '#8b008b', 'darkolivegreen': '#556b2f',\n            'darkorange': '#ff8c00', 'darkorchid': '#9932cc', 'darkred': '#8b0000', 'darksalmon': '#e9967a', 'darkseagreen': '#8fbc8f',\n            'darkslateblue': '#483d8b', 'darkslategray': '#2f4f4f', 'darkturquoise': '#00ced1',\n            'darkviolet': '#9400d3', 'deeppink': '#ff1493', 'deepskyblue': '#00bfff', 'dimgray': '#696969', 'dodgerblue': '#1e90ff',\n            'firebrick': '#b22222', 'floralwhite': '#fffaf0', 'forestgreen': '#228b22', 'fuchsia': '#ff00ff',\n            'gainsboro': '#dcdcdc', 'ghostwhite': '#f8f8ff', 'gold': '#ffd700', 'goldenrod': '#daa520', 'gray': '#808080',\n            'green': '#008000', 'greenyellow': '#adff2f',\n            'honeydew': '#f0fff0', 'hotpink': '#ff69b4',\n            'indianred ': '#cd5c5c', 'indigo ': '#4b0082', 'ivory': '#fffff0', 'khaki': '#f0e68c',\n            'lavender': '#e6e6fa', 'lavenderblush': '#fff0f5', 'lawngreen': '#7cfc00', 'lemonchiffon': '#fffacd', 'lightblue': '#add8e6',\n            'lightcoral': '#f08080', 'lightcyan': '#e0ffff', 'lightgoldenrodyellow': '#fafad2',\n            'lightgrey': '#d3d3d3', 'lightgreen': '#90ee90', 'lightpink': '#ffb6c1', 'lightsalmon': '#ffa07a', 'lightseagreen': '#20b2aa',\n            'lightskyblue': '#87cefa', 'lightslategray': '#778899', 'lightsteelblue': '#b0c4de',\n            'lightyellow': '#ffffe0', 'lime': '#00ff00', 'limegreen': '#32cd32', 'linen': '#faf0e6',\n            'magenta': '#ff00ff', 'maroon': '#800000', 'mediumaquamarine': '#66cdaa', 'mediumblue': '#0000cd', 'mediumorchid': '#ba55d3',\n            'mediumpurple': '#9370d8', 'mediumseagreen': '#3cb371', 'mediumslateblue': '#7b68ee',\n            'mediumspringgreen': '#00fa9a', 'mediumturquoise': '#48d1cc', 'mediumvioletred': '#c71585', 'midnightblue': '#191970',\n            'mintcream': '#f5fffa', 'mistyrose': '#ffe4e1', 'moccasin': '#ffe4b5',\n            'navajowhite': '#ffdead', 'navy': '#000080', 'orchid': '#da70d6', 'papayawhip': '#ffefd5',\n            'oldlace': '#fdf5e6', 'olive': '#808000', 'olivedrab': '#6b8e23', 'orange': '#ffa500', 'orangered': '#ff4500',\n            'palegoldenrod': '#eee8aa', 'palegreen': '#98fb98', 'paleturquoise': '#afeeee', 'palevioletred': '#d87093',\n            'peachpuff': '#ffdab9', 'peru': '#cd853f', 'pink': '#ffc0cb', 'plum': '#dda0dd', 'powderblue': '#b0e0e6', 'purple': '#800080',\n            'red': '#ff0000', 'rosybrown': '#bc8f8f', 'royalblue': '#4169e1',\n            'saddlebrown': '#8b4513', 'salmon': '#fa8072', 'sandybrown': '#f4a460', 'seagreen': '#2e8b57', 'seashell': '#fff5ee',\n            'sienna': '#a0522d', 'silver': '#c0c0c0', 'skyblue': '#87ceeb', 'slateblue': '#6a5acd',\n            'slategray': '#708090', 'snow': '#fffafa', 'springgreen': '#00ff7f', 'steelblue': '#4682b4',\n            'tan': '#d2b48c', 'teal': '#008080', 'thistle': '#d8bfd8', 'tomato': '#ff6347', 'turquoise': '#40e0d0',\n            'violet': '#ee82ee',\n            'wheat': '#f5deb3', 'white': '#ffffff', 'whitesmoke': '#f5f5f5',\n            'yellow': '#ffff00', 'yellowgreen': '#9acd32'\n        };\n        if (Object.prototype.toString.call(color) === '[object Array]') {\n            return color;\n        }\n        if (typeof colors[color.toLowerCase()] !== 'undefined') {\n            return colors[color.toLowerCase()];\n        }\n        return color;\n    };\n    return ColorMapping;\n}());\nexport { ColorMapping };\n"]},"metadata":{},"sourceType":"module"}