{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * This module enables the export to PDF functionality in Maps control.\n *\n * @hidden\n */\n\nvar PdfExport =\n/** @class */\nfunction () {\n  /**\n   * Constructor for Maps\n   *\n   * @param {Maps} control Specifies the instance of the map\n   */\n  function PdfExport(control) {\n    this.control = control;\n  }\n  /**\n   * To export the file as image/svg format\n   *\n   * @param {ExportType} type - Specifies the type of the document\n   * @param {string} fileName - Specifies the file name of the document\n   * @param {boolean} allowDownload - Specifies whether to download the document or not\n   * @param {PdfPageOrientation} orientation - Specifies the orientation of the PDF document to export the component\n   * @returns {Promise<string>} - Returns the promise string\n   * @private\n   */\n\n\n  PdfExport.prototype.export = function (type, fileName, allowDownload, orientation) {\n    var _this = this; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    var promise = new Promise(function (resolve, reject) {\n      var canvasElement = createElement('canvas', {\n        id: 'ej2-canvas',\n        attrs: {\n          'width': _this.control.availableSize.width.toString(),\n          'height': _this.control.availableSize.height.toString()\n        }\n      });\n      orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n      var svgParent = document.getElementById(_this.control.element.id + '_Tile_SVG_Parent');\n      var svgData;\n\n      var exportElement = _this.control.svgObject.cloneNode(true);\n\n      var backgroundElement = exportElement.childNodes[0];\n      var backgroundColor = backgroundElement.getAttribute('fill');\n\n      if ((_this.control.theme === 'Tailwind' || _this.control.theme === 'TailwindDark' || _this.control.theme === 'Bootstrap5' || _this.control.theme === 'Bootstrap5Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n        exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n      }\n\n      var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] : [new XMLSerializer().serializeToString(exportElement)], {\n        type: 'image/svg+xml'\n      }));\n      var pdfDocument = new PdfDocument();\n      var image = new Image();\n      var ctx = canvasElement.getContext('2d');\n\n      if (!_this.control.isTileMap) {\n        image.onload = function () {\n          ctx.drawImage(image, 0, 0);\n          window.URL.revokeObjectURL(url);\n\n          if (type === 'PDF') {\n            var imageString = canvasElement.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n            pdfDocument.pageSettings.orientation = orientation;\n            imageString = imageString.slice(imageString.indexOf(',') + 1);\n            pdfDocument.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, _this.control.availableSize.width - 60, _this.control.availableSize.height);\n\n            if (allowDownload) {\n              pdfDocument.save(fileName + '.pdf');\n              pdfDocument.destroy();\n            } else {\n              resolve(null);\n            }\n          }\n        };\n\n        image.src = url;\n      } else {\n        var xHttp = new XMLHttpRequest();\n        var tileLength_1 = _this.control.mapLayerPanel.tiles.length;\n\n        var _loop_1 = function (i) {\n          var tile = document.getElementById(_this.control.element.id + '_tile_' + (i - 1));\n          var tileImg = new Image();\n          tileImg.crossOrigin = 'Anonymous';\n          ctx.fillStyle = _this.control.background ? _this.control.background : '#FFFFFF';\n          ctx.fillRect(0, 0, _this.control.availableSize.width, _this.control.availableSize.height);\n          ctx.font = _this.control.titleSettings.textStyle.size + ' Arial';\n          ctx.fillStyle = document.getElementById(_this.control.element.id + '_Map_title').getAttribute('fill');\n          ctx.fillText(_this.control.titleSettings.text, parseFloat(document.getElementById(_this.control.element.id + '_Map_title').getAttribute('x')), parseFloat(document.getElementById(_this.control.element.id + '_Map_title').getAttribute('y')));\n\n          tileImg.onload = function () {\n            if (i === 0 || i === tileLength_1 + 1) {\n              if (i === 0) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.rect(0, parseFloat(svgParent.style.top), parseFloat(svgParent.style.width), parseFloat(svgParent.style.height));\n                ctx.clip();\n              } else {\n                ctx.setTransform(1, 0, 0, 1, parseFloat(svgParent.style.left), parseFloat(svgParent.style.top));\n              }\n            } else {\n              ctx.setTransform(1, 0, 0, 1, parseFloat(tile.style.left) + 10, parseFloat(tile.style.top) + parseFloat(document.getElementById(_this.control.element.id + '_tile_parent').style.top));\n            }\n\n            ctx.drawImage(tileImg, 0, 0);\n\n            if (i === tileLength_1 + 1) {\n              if (type === 'PDF') {\n                localStorage.setItem('saved-image-example', canvasElement.toDataURL('image/jpeg'));\n                var x = localStorage.getItem('saved-image-example');\n                pdfDocument.pageSettings.orientation = orientation;\n                x = x.slice(x.indexOf(',') + 1);\n                pdfDocument.pages.add().graphics.drawImage(new PdfBitmap(x), 0, 0, _this.control.availableSize.width - 60, _this.control.availableSize.height);\n\n                if (allowDownload) {\n                  pdfDocument.save(fileName + '.pdf');\n                  pdfDocument.destroy();\n                } else {\n                  resolve(null);\n                }\n              }\n            }\n          };\n\n          if (i === 0 || i === tileLength_1 + 1) {\n            if (i === 0) {\n              tileImg.src = url;\n            } else {\n              setTimeout(function () {\n                tileImg.src = window.URL.createObjectURL(new Blob([new XMLSerializer().serializeToString(document.getElementById(_this.control.element.id + '_Tile_SVG'))], {\n                  type: 'image/svg+xml'\n                }));\n              }, 300);\n            }\n          } else {\n            xHttp.open('GET', tile.children[0].getAttribute('src'), true);\n            xHttp.send();\n            tileImg.src = tile.children[0].getAttribute('src');\n          }\n        };\n\n        for (var i = 0; i <= tileLength_1 + 1; i++) {\n          _loop_1(i);\n        }\n      }\n    });\n    return promise;\n  };\n  /**\n   * Get module name.\n   *\n   * @returns {string} - Returns the module name\n   */\n\n\n  PdfExport.prototype.getModuleName = function () {\n    return 'PdfExport';\n  };\n  /**\n   * To destroy the PdfExports.\n   *\n   * @param {Maps} maps - Specifies the instance of the maps.\n   * @returns {void}\n   * @private\n   */\n\n\n  PdfExport.prototype.destroy = function (maps) {\n    /**\n     * Destroy method performed here\n     */\n  };\n\n  return PdfExport;\n}();\n\nexport { PdfExport };","map":{"version":3,"sources":["C:/Users/vinay/Desktop/world-map-dashboard/world-map/node_modules/@syncfusion/ej2-maps/src/maps/model/export-pdf.js"],"names":["createElement","isNullOrUndefined","PdfPageOrientation","PdfDocument","PdfBitmap","PdfExport","control","prototype","export","type","fileName","allowDownload","orientation","_this","promise","Promise","resolve","reject","canvasElement","id","attrs","availableSize","width","toString","height","Landscape","svgParent","document","getElementById","element","svgData","exportElement","svgObject","cloneNode","backgroundElement","childNodes","backgroundColor","getAttribute","theme","setAttribute","url","window","URL","createObjectURL","Blob","XMLSerializer","serializeToString","pdfDocument","image","Image","ctx","getContext","isTileMap","onload","drawImage","revokeObjectURL","imageString","toDataURL","replace","pageSettings","slice","indexOf","pages","add","graphics","save","destroy","src","xHttp","XMLHttpRequest","tileLength_1","mapLayerPanel","tiles","length","_loop_1","i","tile","tileImg","crossOrigin","fillStyle","background","fillRect","font","titleSettings","textStyle","size","fillText","text","parseFloat","setTransform","rect","style","top","clip","left","localStorage","setItem","x","getItem","setTimeout","open","children","send","getModuleName","maps"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * This module enables the export to PDF functionality in Maps control.\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {Maps} control Specifies the instance of the map\n     */\n    function PdfExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the document\n     * @param {string} fileName - Specifies the file name of the document\n     * @param {boolean} allowDownload - Specifies whether to download the document or not\n     * @param {PdfPageOrientation} orientation - Specifies the orientation of the PDF document to export the component\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (type, fileName, allowDownload, orientation) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var canvasElement = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var svgParent = document.getElementById(_this.control.element.id + '_Tile_SVG_Parent');\n            var svgData;\n            var exportElement = _this.control.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((_this.control.theme === 'Tailwind' || _this.control.theme === 'TailwindDark' || _this.control.theme === 'Bootstrap5' || _this.control.theme === 'Bootstrap5Dark')\n                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var pdfDocument = new PdfDocument();\n            var image = new Image();\n            var ctx = canvasElement.getContext('2d');\n            if (!_this.control.isTileMap) {\n                image.onload = (function () {\n                    ctx.drawImage(image, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (type === 'PDF') {\n                        var imageString = canvasElement.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                        pdfDocument.pageSettings.orientation = orientation;\n                        imageString = imageString.slice(imageString.indexOf(',') + 1);\n                        pdfDocument.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                        if (allowDownload) {\n                            pdfDocument.save(fileName + '.pdf');\n                            pdfDocument.destroy();\n                        }\n                        else {\n                            resolve(null);\n                        }\n                    }\n                });\n                image.src = url;\n            }\n            else {\n                var xHttp = new XMLHttpRequest();\n                var tileLength_1 = _this.control.mapLayerPanel.tiles.length;\n                var _loop_1 = function (i) {\n                    var tile = document.getElementById(_this.control.element.id + '_tile_' + (i - 1));\n                    var tileImg = new Image();\n                    tileImg.crossOrigin = 'Anonymous';\n                    ctx.fillStyle = _this.control.background ? _this.control.background : '#FFFFFF';\n                    ctx.fillRect(0, 0, _this.control.availableSize.width, _this.control.availableSize.height);\n                    ctx.font = _this.control.titleSettings.textStyle.size + ' Arial';\n                    ctx.fillStyle = document.getElementById(_this.control.element.id + '_Map_title').getAttribute('fill');\n                    ctx.fillText(_this.control.titleSettings.text, parseFloat(document.getElementById(_this.control.element.id + '_Map_title').getAttribute('x')), parseFloat(document.getElementById(_this.control.element.id + '_Map_title').getAttribute('y')));\n                    tileImg.onload = (function () {\n                        if (i === 0 || i === tileLength_1 + 1) {\n                            if (i === 0) {\n                                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                                ctx.rect(0, parseFloat(svgParent.style.top), parseFloat(svgParent.style.width), parseFloat(svgParent.style.height));\n                                ctx.clip();\n                            }\n                            else {\n                                ctx.setTransform(1, 0, 0, 1, parseFloat(svgParent.style.left), parseFloat(svgParent.style.top));\n                            }\n                        }\n                        else {\n                            ctx.setTransform(1, 0, 0, 1, parseFloat(tile.style.left) + 10, parseFloat(tile.style.top) +\n                                (parseFloat(document.getElementById(_this.control.element.id + '_tile_parent').style.top)));\n                        }\n                        ctx.drawImage(tileImg, 0, 0);\n                        if (i === tileLength_1 + 1) {\n                            if (type === 'PDF') {\n                                localStorage.setItem('saved-image-example', canvasElement.toDataURL('image/jpeg'));\n                                var x = localStorage.getItem('saved-image-example');\n                                pdfDocument.pageSettings.orientation = orientation;\n                                x = x.slice(x.indexOf(',') + 1);\n                                pdfDocument.pages.add().graphics.drawImage(new PdfBitmap(x), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                                if (allowDownload) {\n                                    pdfDocument.save(fileName + '.pdf');\n                                    pdfDocument.destroy();\n                                }\n                                else {\n                                    resolve(null);\n                                }\n                            }\n                        }\n                    });\n                    if (i === 0 || i === tileLength_1 + 1) {\n                        if (i === 0) {\n                            tileImg.src = url;\n                        }\n                        else {\n                            setTimeout(function () {\n                                tileImg.src = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(document.getElementById(_this.control.element.id + '_Tile_SVG'))], { type: 'image/svg+xml' }));\n                            }, 300);\n                        }\n                    }\n                    else {\n                        xHttp.open('GET', tile.children[0].getAttribute('src'), true);\n                        xHttp.send();\n                        tileImg.src = tile.children[0].getAttribute('src');\n                    }\n                };\n                for (var i = 0; i <= tileLength_1 + 1; i++) {\n                    _loop_1(i);\n                }\n            }\n        });\n        return promise;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExports.\n     *\n     * @param {Maps} maps - Specifies the instance of the maps.\n     * @returns {void}\n     * @private\n     */\n    PdfExport.prototype.destroy = function (maps) {\n        /**\n         * Destroy method performed here\n         */\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n"]},"metadata":{},"sourceType":"module"}