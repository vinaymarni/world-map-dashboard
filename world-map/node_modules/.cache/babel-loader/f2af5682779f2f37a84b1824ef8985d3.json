{"ast":null,"code":"import { click, itemSelection } from '../index';\nimport { getElement, createStyle, customizeStyle, removeClass, getTargetElement, getElementByID } from '../utils/helper';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\n/**\n * Selection module class\n */\n\nvar Selection =\n/** @class */\nfunction () {\n  function Selection(maps) {\n    this.maps = maps;\n    this.addEventListener();\n  }\n  /**\n   * For binding events to selection module\n   *\n   * @returns {void}\n   */\n\n\n  Selection.prototype.addEventListener = function () {\n    if (!this.maps.isDestroyed) {\n      this.maps.on(click, this.mouseClick, this);\n      this.maps.on(Browser.touchEndEvent, this.mouseClick, this);\n    }\n  };\n  /**\n   * For removing events from selection modue\n   *\n   * @returns {void}\n   */\n\n\n  Selection.prototype.removeEventListener = function () {\n    if (this.maps.isDestroyed) {\n      return;\n    }\n\n    this.maps.off(click, this.mouseClick);\n    this.maps.off(Browser.touchEndEvent, this.mouseClick);\n  };\n\n  Selection.prototype.mouseClick = function (targetElement) {\n    if (!isNullOrUndefined(targetElement['type']) && targetElement['type'].indexOf('touch') !== -1 && isNullOrUndefined(targetElement.id)) {\n      targetElement = targetElement['target'];\n    }\n\n    if (!isNullOrUndefined(targetElement.id) && (targetElement.id.indexOf('LayerIndex') > -1 || targetElement.id.indexOf('NavigationIndex') > -1)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var shapeData = void 0; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      var data = void 0;\n      var shapeIndex = void 0;\n      var dataIndex = void 0;\n      var layerIndex = parseInt(targetElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n\n      if (targetElement.id.indexOf('shapeIndex') > -1) {\n        shapeIndex = parseInt(targetElement.id.split('_shapeIndex_')[1].split('_')[0], 10);\n        shapeData = this.maps.layers[layerIndex].shapeData['features']['length'] > shapeIndex ? this.maps.layers[layerIndex].shapeData['features'][shapeIndex]['properties'] : null;\n        dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n        data = isNullOrUndefined(dataIndex) ? null : this.maps.layers[layerIndex].dataSource[dataIndex];\n        this.selectionsettings = this.maps.layers[layerIndex].selectionSettings;\n        this.selectionType = 'Shape';\n      } else if (targetElement.id.indexOf('BubbleIndex') > -1) {\n        var bubbleIndex = parseInt(targetElement.id.split('_BubbleIndex_')[1].split('_')[0], 10);\n        dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n        data = this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].dataSource[dataIndex];\n        this.selectionsettings = this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].selectionSettings;\n        this.selectionType = 'Bubble';\n      } else if (targetElement.id.indexOf('MarkerIndex') > -1) {\n        var markerIndex = parseInt(targetElement.id.split('_MarkerIndex_')[1].split('_')[0], 10);\n        dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n        data = this.maps.layers[layerIndex].markerSettings[markerIndex].dataSource[dataIndex];\n        this.selectionsettings = this.maps.layers[layerIndex].markerSettings[markerIndex].selectionSettings;\n        this.selectionType = 'Marker';\n      } else {\n        var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n        shapeData = null;\n        data = {\n          latitude: this.maps.layers[layerIndex].navigationLineSettings[index].latitude,\n          longitude: this.maps.layers[layerIndex].navigationLineSettings[index].longitude\n        };\n        this.selectionsettings = this.maps.layers[layerIndex].navigationLineSettings[index].selectionSettings;\n        this.selectionType = 'navigationline';\n      }\n\n      if (this.selectionsettings.enable) {\n        this.selectElement(targetElement, layerIndex, data, shapeData);\n      }\n    } else if (this.maps.legendSettings.visible && !this.maps.legendSettings.toggleLegendSettings.enable && this.maps.legendModule && !isNullOrUndefined(targetElement.id) && targetElement.id.indexOf('_Text') === -1 && (targetElement.id.indexOf(this.maps.element.id + '_Legend_Shape_Index') > -1 || targetElement.id.indexOf(this.maps.element.id + '_Legend_Index') !== -1)) {\n      this.maps.legendModule.legendHighLightAndSelection(targetElement, 'selection');\n    }\n  };\n  /**\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  Selection.prototype.selectElement = function (targetElement, layerIndex, data, shapeData) {\n    this.maps.mapSelect = targetElement ? true : false;\n\n    if (this.maps.legendModule && this.maps.legendSettings.visible && targetElement.id.indexOf('_MarkerIndex_') === -1) {\n      this.maps.legendModule.shapeHighLightAndSelection(targetElement, data, this.selectionsettings, 'selection', layerIndex);\n    }\n\n    var shapeToggled = targetElement.id.indexOf('shapeIndex') > -1 && this.maps.legendSettings.visible && this.maps.legendModule ? this.maps.legendModule.shapeToggled : true;\n\n    if (shapeToggled) {\n      this.selectMap(targetElement, shapeData, data);\n    }\n  }; // eslint-disable-next-line valid-jsdoc\n\n  /**\n   * Public method for selection\n   */\n\n\n  Selection.prototype.addSelection = function (layerIndex, name, enable) {\n    var targetElement = getTargetElement(layerIndex, name, enable, this.maps);\n\n    if (enable) {\n      this.selectMap(targetElement, null, null);\n    } else {\n      removeClass(targetElement);\n    }\n  };\n  /**\n   * Method for selection\n   *\n   * @param {Element} targetElement - Specifies the target element\n   * @param {any} shapeData - Specifies the shape data\n   * @param {any} data - Specifies the data\n   * @returns {void}\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  Selection.prototype.selectMap = function (targetElement, shapeData, data) {\n    var _this = this;\n\n    var layerIndex = parseInt(targetElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n    var parentElement;\n    var children;\n    var selectionClass;\n    var selectionsettings = this.selectionsettings;\n    var border = {\n      color: targetElement.parentElement.id.indexOf('LineString') === -1 ? this.selectionsettings.border.color : this.selectionsettings.border.color || this.selectionsettings.fill,\n      width: targetElement.parentElement.id.indexOf('LineString') === -1 ? this.selectionsettings.border.width / (this.selectionType === 'Marker' ? 1 : this.maps.scale) : this.selectionsettings.border.width / this.maps.scale,\n      opacity: this.selectionsettings.border.opacity\n    };\n    var eventArgs = {\n      opacity: this.selectionsettings.opacity,\n      fill: targetElement.parentElement.id.indexOf('LineString') === -1 ? this.selectionType !== 'navigationline' ? this.selectionsettings.fill : 'none' : 'transparent',\n      border: border,\n      name: itemSelection,\n      target: targetElement.id,\n      cancel: false,\n      shapeData: shapeData,\n      data: data,\n      maps: this.maps\n    };\n    this.maps.trigger('itemSelection', eventArgs, function (observedArgs) {\n      eventArgs.border.opacity = isNullOrUndefined(_this.selectionsettings.border.opacity) ? _this.selectionsettings.opacity : _this.selectionsettings.border.opacity;\n\n      if (!eventArgs.cancel) {\n        if (targetElement.getAttribute('class') === _this.selectionType + 'selectionMapStyle') {\n          removeClass(targetElement);\n\n          _this.removedSelectionList(targetElement);\n\n          for (var m = 0; m < _this.maps.shapeSelectionItem.length; m++) {\n            if (_this.maps.shapeSelectionItem[m] === eventArgs.shapeData) {\n              _this.maps.shapeSelectionItem.splice(m, 1);\n\n              break;\n            }\n          }\n\n          if (targetElement.id.indexOf('NavigationIndex') > -1) {\n            var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n            var layerIndex_1 = parseInt(targetElement.parentElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n            targetElement.setAttribute('stroke-width', _this.maps.layers[layerIndex_1].navigationLineSettings[index].width.toString());\n            targetElement.setAttribute('stroke', _this.maps.layers[layerIndex_1].navigationLineSettings[index].color);\n          }\n        } else {\n          var layetElement = getElementByID(_this.maps.element.id + '_Layer_Collections');\n\n          if (!_this.selectionsettings.enableMultiSelect && layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle').length > 0) {\n            var eleCount = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle').length;\n            var ele = void 0;\n\n            for (var k = 0; k < eleCount; k++) {\n              ele = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle')[0];\n              removeClass(ele);\n\n              _this.removedSelectionList(ele);\n            }\n\n            if (_this.selectionType === 'Shape') {\n              _this.maps.shapeSelectionItem = [];\n              var selectionLength = _this.maps.selectedElementId.length;\n\n              for (var i = 0; i < selectionLength; i++) {\n                ele = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle')[0];\n                removeClass(ele);\n\n                var selectedElementIdIndex = _this.maps.selectedElementId.indexOf(ele.getAttribute('id'));\n\n                _this.maps.selectedElementId.splice(selectedElementIdIndex, 1);\n              }\n            }\n\n            if (ele.id.indexOf('NavigationIndex') > -1) {\n              var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n              var layerIndex_2 = parseInt(targetElement.parentElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n              ele.setAttribute('stroke-width', _this.maps.layers[layerIndex_2].navigationLineSettings[index].width.toString());\n              ele.setAttribute('stroke', _this.maps.layers[layerIndex_2].navigationLineSettings[index].color);\n            }\n          }\n\n          if (!getElement(_this.selectionType + 'selectionMap')) {\n            document.body.appendChild(createStyle(_this.selectionType + 'selectionMap', _this.selectionType + 'selectionMapStyle', eventArgs));\n          } else {\n            customizeStyle(_this.selectionType + 'selectionMap', _this.selectionType + 'selectionMapStyle', eventArgs);\n          }\n\n          targetElement.setAttribute('class', _this.selectionType + 'selectionMapStyle');\n\n          if (targetElement.getAttribute('class') === 'ShapeselectionMapStyle') {\n            _this.maps.shapeSelectionClass = getElement(_this.selectionType + 'selectionMap');\n\n            _this.maps.selectedElementId.push(targetElement.getAttribute('id'));\n\n            _this.maps.shapeSelectionItem.push(eventArgs.shapeData);\n          }\n\n          if (targetElement.getAttribute('class') === 'MarkerselectionMapStyle') {\n            _this.maps.markerSelectionClass = getElement(_this.selectionType + 'selectionMap');\n\n            _this.maps.selectedMarkerElementId.push(targetElement.getAttribute('id'));\n          }\n\n          if (targetElement.getAttribute('class') === 'BubbleselectionMapStyle') {\n            _this.maps.bubbleSelectionClass = getElement(_this.selectionType + 'selectionMap');\n\n            _this.maps.selectedBubbleElementId.push(targetElement.getAttribute('id'));\n          }\n\n          if (targetElement.getAttribute('class') === 'navigationlineselectionMapStyle') {\n            _this.maps.navigationSelectionClass = getElement(_this.selectionType + 'selectionMap');\n\n            _this.maps.selectedNavigationElementId.push(targetElement.getAttribute('id'));\n          }\n        }\n      }\n    });\n  };\n  /**\n   * Remove legend selection\n   */\n  // private removeLegendSelection(legendCollection: Object[], targetElement: Element): void {\n  //     let shape: Element;\n  //     if (!this.selectionsettings.enableMultiSelect) {\n  //        for (let i: number = 0; i < legendCollection.length; i++) {\n  //             for (let data of legendCollection[i]['data']) {\n  //                 shape = getElement(this.maps.element.id + '_LayerIndex_' + data['layerIndex'] +\n  //                            '_shapeIndex_' + data['shapeIndex'] + '_dataIndex_' + data['dataIndex']);\n  //                 removeClass(shape);\n  //             }\n  //         }\n  //     }\n  // }\n\n  /**\n   * Get module name.\n   *\n   * @param {Element} targetElement - Specifies the target element\n   * @returns {void}\n   * @private\n   */\n\n\n  Selection.prototype.removedSelectionList = function (targetElement) {\n    if (this.selectionType === 'Shape') {\n      this.maps.selectedElementId.splice(this.maps.selectedElementId.indexOf(targetElement.getAttribute('id')), 1);\n    }\n\n    if (this.selectionType === 'Bubble') {\n      this.maps.selectedBubbleElementId.splice(this.maps.selectedBubbleElementId.indexOf(targetElement.getAttribute('id')), 1);\n    }\n\n    if (this.selectionType === 'Marker') {\n      this.maps.selectedMarkerElementId.splice(this.maps.selectedMarkerElementId.indexOf(targetElement.getAttribute('id')), 1);\n    }\n\n    if (this.selectionType === 'navigationline') {\n      this.maps.selectedBubbleElementId.splice(this.maps.selectedBubbleElementId.indexOf(targetElement.getAttribute('id')), 1);\n    }\n  };\n  /**\n   * Get module name.\n   *\n   * @returns {string} - Returns the module name\n   */\n\n\n  Selection.prototype.getModuleName = function () {\n    return 'Selection';\n  };\n  /**\n   * To destroy the selection.\n   *\n   * @param {Maps} maps - Specifies the maps instance.\n   * @returns {void}\n   * @private\n   */\n\n\n  Selection.prototype.destroy = function (maps) {\n    /**\n     * Destroy method performed here\n     */\n    this.removeEventListener();\n  };\n\n  return Selection;\n}();\n\nexport { Selection };","map":{"version":3,"sources":["C:/Users/vinay/Desktop/world-map-dashboard/world-map/node_modules/@syncfusion/ej2-maps/src/maps/user-interaction/selection.js"],"names":["click","itemSelection","getElement","createStyle","customizeStyle","removeClass","getTargetElement","getElementByID","isNullOrUndefined","Browser","Selection","maps","addEventListener","prototype","isDestroyed","on","mouseClick","touchEndEvent","removeEventListener","off","targetElement","indexOf","id","shapeData","data","shapeIndex","dataIndex","layerIndex","parseInt","split","layers","dataSource","selectionsettings","selectionSettings","selectionType","bubbleIndex","bubbleSettings","markerIndex","markerSettings","index","latitude","navigationLineSettings","longitude","enable","selectElement","legendSettings","visible","toggleLegendSettings","legendModule","element","legendHighLightAndSelection","mapSelect","shapeHighLightAndSelection","shapeToggled","selectMap","addSelection","name","_this","parentElement","children","selectionClass","border","color","fill","width","scale","opacity","eventArgs","target","cancel","trigger","observedArgs","getAttribute","removedSelectionList","m","shapeSelectionItem","length","splice","layerIndex_1","setAttribute","toString","layetElement","enableMultiSelect","getElementsByClassName","eleCount","ele","k","selectionLength","selectedElementId","i","selectedElementIdIndex","layerIndex_2","document","body","appendChild","shapeSelectionClass","push","markerSelectionClass","selectedMarkerElementId","bubbleSelectionClass","selectedBubbleElementId","navigationSelectionClass","selectedNavigationElementId","getModuleName","destroy"],"mappings":"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","sourcesContent":["import { click, itemSelection } from '../index';\nimport { getElement, createStyle, customizeStyle, removeClass, getTargetElement, getElementByID } from '../utils/helper';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\n/**\n * Selection module class\n */\nvar Selection = /** @class */ (function () {\n    function Selection(maps) {\n        this.maps = maps;\n        this.addEventListener();\n    }\n    /**\n     * For binding events to selection module\n     *\n     * @returns {void}\n     */\n    Selection.prototype.addEventListener = function () {\n        if (!this.maps.isDestroyed) {\n            this.maps.on(click, this.mouseClick, this);\n            this.maps.on(Browser.touchEndEvent, this.mouseClick, this);\n        }\n    };\n    /**\n     * For removing events from selection modue\n     *\n     * @returns {void}\n     */\n    Selection.prototype.removeEventListener = function () {\n        if (this.maps.isDestroyed) {\n            return;\n        }\n        this.maps.off(click, this.mouseClick);\n        this.maps.off(Browser.touchEndEvent, this.mouseClick);\n    };\n    Selection.prototype.mouseClick = function (targetElement) {\n        if (!isNullOrUndefined(targetElement['type']) && targetElement['type'].indexOf('touch') !== -1 &&\n            isNullOrUndefined(targetElement.id)) {\n            targetElement = targetElement['target'];\n        }\n        if (!isNullOrUndefined(targetElement.id) && (targetElement.id.indexOf('LayerIndex') > -1 ||\n            targetElement.id.indexOf('NavigationIndex') > -1)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var shapeData = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var data = void 0;\n            var shapeIndex = void 0;\n            var dataIndex = void 0;\n            var layerIndex = parseInt(targetElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n            if (targetElement.id.indexOf('shapeIndex') > -1) {\n                shapeIndex = parseInt(targetElement.id.split('_shapeIndex_')[1].split('_')[0], 10);\n                shapeData = this.maps.layers[layerIndex].shapeData['features']['length'] > shapeIndex ?\n                    this.maps.layers[layerIndex].shapeData['features'][shapeIndex]['properties'] : null;\n                dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n                data = isNullOrUndefined(dataIndex) ? null : this.maps.layers[layerIndex].dataSource[dataIndex];\n                this.selectionsettings = this.maps.layers[layerIndex].selectionSettings;\n                this.selectionType = 'Shape';\n            }\n            else if (targetElement.id.indexOf('BubbleIndex') > -1) {\n                var bubbleIndex = parseInt(targetElement.id.split('_BubbleIndex_')[1].split('_')[0], 10);\n                dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n                data = this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].dataSource[dataIndex];\n                this.selectionsettings = this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].selectionSettings;\n                this.selectionType = 'Bubble';\n            }\n            else if (targetElement.id.indexOf('MarkerIndex') > -1) {\n                var markerIndex = parseInt(targetElement.id.split('_MarkerIndex_')[1].split('_')[0], 10);\n                dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n                data = this.maps.layers[layerIndex].markerSettings[markerIndex].dataSource[dataIndex];\n                this.selectionsettings = this.maps.layers[layerIndex].markerSettings[markerIndex].selectionSettings;\n                this.selectionType = 'Marker';\n            }\n            else {\n                var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n                shapeData = null;\n                data = {\n                    latitude: this.maps.layers[layerIndex].navigationLineSettings[index].latitude,\n                    longitude: this.maps.layers[layerIndex].navigationLineSettings[index].longitude\n                };\n                this.selectionsettings = this.maps.layers[layerIndex].navigationLineSettings[index].selectionSettings;\n                this.selectionType = 'navigationline';\n            }\n            if (this.selectionsettings.enable) {\n                this.selectElement(targetElement, layerIndex, data, shapeData);\n            }\n        }\n        else if ((this.maps.legendSettings.visible && !this.maps.legendSettings.toggleLegendSettings.enable && this.maps.legendModule) &&\n            !isNullOrUndefined(targetElement.id) && targetElement.id.indexOf('_Text') === -1 &&\n            (targetElement.id.indexOf(this.maps.element.id + '_Legend_Shape_Index') > -1 ||\n                targetElement.id.indexOf(this.maps.element.id + '_Legend_Index') !== -1)) {\n            this.maps.legendModule.legendHighLightAndSelection(targetElement, 'selection');\n        }\n    };\n    /**\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Selection.prototype.selectElement = function (targetElement, layerIndex, data, shapeData) {\n        this.maps.mapSelect = targetElement ? true : false;\n        if (this.maps.legendModule && this.maps.legendSettings.visible && targetElement.id.indexOf('_MarkerIndex_') === -1) {\n            this.maps.legendModule.shapeHighLightAndSelection(targetElement, data, this.selectionsettings, 'selection', layerIndex);\n        }\n        var shapeToggled = (targetElement.id.indexOf('shapeIndex') > -1 && this.maps.legendSettings.visible && this.maps.legendModule) ?\n            this.maps.legendModule.shapeToggled : true;\n        if (shapeToggled) {\n            this.selectMap(targetElement, shapeData, data);\n        }\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Public method for selection\n     */\n    Selection.prototype.addSelection = function (layerIndex, name, enable) {\n        var targetElement = getTargetElement(layerIndex, name, enable, this.maps);\n        if (enable) {\n            this.selectMap(targetElement, null, null);\n        }\n        else {\n            removeClass(targetElement);\n        }\n    };\n    /**\n     * Method for selection\n     *\n     * @param {Element} targetElement - Specifies the target element\n     * @param {any} shapeData - Specifies the shape data\n     * @param {any} data - Specifies the data\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Selection.prototype.selectMap = function (targetElement, shapeData, data) {\n        var _this = this;\n        var layerIndex = parseInt(targetElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n        var parentElement;\n        var children;\n        var selectionClass;\n        var selectionsettings = this.selectionsettings;\n        var border = {\n            color: (targetElement.parentElement.id.indexOf('LineString') === -1) ? this.selectionsettings.border.color : (this.selectionsettings.border.color || this.selectionsettings.fill),\n            width: (targetElement.parentElement.id.indexOf('LineString') === -1) ? (this.selectionsettings.border.width / (this.selectionType === 'Marker' ? 1 : this.maps.scale)) : (this.selectionsettings.border.width / this.maps.scale),\n            opacity: this.selectionsettings.border.opacity\n        };\n        var eventArgs = {\n            opacity: this.selectionsettings.opacity,\n            fill: (targetElement.parentElement.id.indexOf('LineString') === -1) ? (this.selectionType !== 'navigationline' ? this.selectionsettings.fill : 'none') : 'transparent',\n            border: border,\n            name: itemSelection,\n            target: targetElement.id,\n            cancel: false,\n            shapeData: shapeData,\n            data: data,\n            maps: this.maps\n        };\n        this.maps.trigger('itemSelection', eventArgs, function (observedArgs) {\n            eventArgs.border.opacity = isNullOrUndefined(_this.selectionsettings.border.opacity) ? _this.selectionsettings.opacity : _this.selectionsettings.border.opacity;\n            if (!eventArgs.cancel) {\n                if (targetElement.getAttribute('class') === _this.selectionType + 'selectionMapStyle') {\n                    removeClass(targetElement);\n                    _this.removedSelectionList(targetElement);\n                    for (var m = 0; m < _this.maps.shapeSelectionItem.length; m++) {\n                        if (_this.maps.shapeSelectionItem[m] === eventArgs.shapeData) {\n                            _this.maps.shapeSelectionItem.splice(m, 1);\n                            break;\n                        }\n                    }\n                    if (targetElement.id.indexOf('NavigationIndex') > -1) {\n                        var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n                        var layerIndex_1 = parseInt(targetElement.parentElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n                        targetElement.setAttribute('stroke-width', _this.maps.layers[layerIndex_1].navigationLineSettings[index].width.toString());\n                        targetElement.setAttribute('stroke', _this.maps.layers[layerIndex_1].navigationLineSettings[index].color);\n                    }\n                }\n                else {\n                    var layetElement = getElementByID(_this.maps.element.id + '_Layer_Collections');\n                    if (!_this.selectionsettings.enableMultiSelect &&\n                        layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle').length > 0) {\n                        var eleCount = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle').length;\n                        var ele = void 0;\n                        for (var k = 0; k < eleCount; k++) {\n                            ele = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle')[0];\n                            removeClass(ele);\n                            _this.removedSelectionList(ele);\n                        }\n                        if (_this.selectionType === 'Shape') {\n                            _this.maps.shapeSelectionItem = [];\n                            var selectionLength = _this.maps.selectedElementId.length;\n                            for (var i = 0; i < selectionLength; i++) {\n                                ele = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle')[0];\n                                removeClass(ele);\n                                var selectedElementIdIndex = _this.maps.selectedElementId.indexOf(ele.getAttribute('id'));\n                                _this.maps.selectedElementId.splice(selectedElementIdIndex, 1);\n                            }\n                        }\n                        if (ele.id.indexOf('NavigationIndex') > -1) {\n                            var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n                            var layerIndex_2 = parseInt(targetElement.parentElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n                            ele.setAttribute('stroke-width', _this.maps.layers[layerIndex_2].navigationLineSettings[index].width.toString());\n                            ele.setAttribute('stroke', _this.maps.layers[layerIndex_2].navigationLineSettings[index].color);\n                        }\n                    }\n                    if (!getElement(_this.selectionType + 'selectionMap')) {\n                        document.body.appendChild(createStyle(_this.selectionType + 'selectionMap', _this.selectionType + 'selectionMapStyle', eventArgs));\n                    }\n                    else {\n                        customizeStyle(_this.selectionType + 'selectionMap', _this.selectionType + 'selectionMapStyle', eventArgs);\n                    }\n                    targetElement.setAttribute('class', _this.selectionType + 'selectionMapStyle');\n                    if (targetElement.getAttribute('class') === 'ShapeselectionMapStyle') {\n                        _this.maps.shapeSelectionClass = getElement(_this.selectionType + 'selectionMap');\n                        _this.maps.selectedElementId.push(targetElement.getAttribute('id'));\n                        _this.maps.shapeSelectionItem.push(eventArgs.shapeData);\n                    }\n                    if (targetElement.getAttribute('class') === 'MarkerselectionMapStyle') {\n                        _this.maps.markerSelectionClass = getElement(_this.selectionType + 'selectionMap');\n                        _this.maps.selectedMarkerElementId.push(targetElement.getAttribute('id'));\n                    }\n                    if (targetElement.getAttribute('class') === 'BubbleselectionMapStyle') {\n                        _this.maps.bubbleSelectionClass = getElement(_this.selectionType + 'selectionMap');\n                        _this.maps.selectedBubbleElementId.push(targetElement.getAttribute('id'));\n                    }\n                    if (targetElement.getAttribute('class') === 'navigationlineselectionMapStyle') {\n                        _this.maps.navigationSelectionClass = getElement(_this.selectionType + 'selectionMap');\n                        _this.maps.selectedNavigationElementId.push(targetElement.getAttribute('id'));\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Remove legend selection\n     */\n    // private removeLegendSelection(legendCollection: Object[], targetElement: Element): void {\n    //     let shape: Element;\n    //     if (!this.selectionsettings.enableMultiSelect) {\n    //        for (let i: number = 0; i < legendCollection.length; i++) {\n    //             for (let data of legendCollection[i]['data']) {\n    //                 shape = getElement(this.maps.element.id + '_LayerIndex_' + data['layerIndex'] +\n    //                            '_shapeIndex_' + data['shapeIndex'] + '_dataIndex_' + data['dataIndex']);\n    //                 removeClass(shape);\n    //             }\n    //         }\n    //     }\n    // }\n    /**\n     * Get module name.\n     *\n     * @param {Element} targetElement - Specifies the target element\n     * @returns {void}\n     * @private\n     */\n    Selection.prototype.removedSelectionList = function (targetElement) {\n        if (this.selectionType === 'Shape') {\n            this.maps.selectedElementId.splice(this.maps.selectedElementId.indexOf(targetElement.getAttribute('id')), 1);\n        }\n        if (this.selectionType === 'Bubble') {\n            this.maps.selectedBubbleElementId.splice(this.maps.selectedBubbleElementId.indexOf(targetElement.getAttribute('id')), 1);\n        }\n        if (this.selectionType === 'Marker') {\n            this.maps.selectedMarkerElementId.splice(this.maps.selectedMarkerElementId.indexOf(targetElement.getAttribute('id')), 1);\n        }\n        if (this.selectionType === 'navigationline') {\n            this.maps.selectedBubbleElementId.splice(this.maps.selectedBubbleElementId.indexOf(targetElement.getAttribute('id')), 1);\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'Selection';\n    };\n    /**\n     * To destroy the selection.\n     *\n     * @param {Maps} maps - Specifies the maps instance.\n     * @returns {void}\n     * @private\n     */\n    Selection.prototype.destroy = function (maps) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return Selection;\n}());\nexport { Selection };\n"]},"metadata":{},"sourceType":"module"}