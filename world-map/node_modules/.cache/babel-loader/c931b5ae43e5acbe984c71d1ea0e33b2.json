{"ast":null,"code":"import { convertTileLatLongToPoint } from '../index';\nimport { convertGeoToPoint, Point, PathOption, maintainSelection } from '../utils/helper';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * navigation-selected-line\n */\n\nvar NavigationLine =\n/** @class */\nfunction () {\n  function NavigationLine(maps) {\n    this.maps = maps;\n  } // eslint-disable-next-line valid-jsdoc\n\n  /**\n   * To render navigation line for maps\n   */\n\n\n  NavigationLine.prototype.renderNavigation = function (layer, factor, layerIndex) {\n    var navigationEle; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    var navigation = layer.navigationLineSettings; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    var longitude; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    var point = []; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    var latitude;\n    var visible;\n    var angle;\n    var width;\n    var color;\n    var dashArray;\n    var pathOption;\n    var direction;\n    var markerWidth;\n    var arcId;\n    var radius;\n    var showArrow;\n    var arrowColor;\n    var arrowSize; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    var arrowSettings;\n    var arrowPosition;\n    var startArrow;\n    var endArrow;\n    var offSet;\n    var offSetValue;\n    var navigationGroup;\n    var d;\n    var group = this.maps.renderer.createGroup({\n      id: this.maps.element.id + '_LayerIndex_' + layerIndex + '_line_Group'\n    });\n\n    for (var i = 0; i < navigation.length; i++) {\n      latitude = navigation[i]['properties']['latitude'];\n      longitude = navigation[i]['properties']['longitude'];\n      visible = navigation[i]['properties']['visible'];\n      angle = navigation[i]['angle'];\n      width = navigation[i]['width'] || 1;\n      color = navigation[i]['color'];\n      dashArray = navigation[i]['properties']['dashArray'];\n      arrowSettings = navigation[i]['properties']['arrowSettings'];\n      showArrow = isNullOrUndefined(arrowSettings) ? false : arrowSettings['properties']['showArrow'];\n\n      if (longitude['length'] === latitude['length'] && visible) {\n        for (var i_1 = 0; i_1 < longitude['length']; i_1++) {\n          var location_1 = this.maps.isTileMap ? convertTileLatLongToPoint(new Point(longitude[i_1], latitude[i_1]), factor, this.maps.tileTranslatePoint, true) : convertGeoToPoint(latitude[i_1], longitude[i_1], factor, layer, this.maps);\n          point.push(location_1);\n        }\n      }\n\n      navigationGroup = this.maps.renderer.createGroup({\n        id: this.maps.element.id + '_LayerIndex_' + layerIndex + '_NavigationGroup' + i + ''\n      });\n\n      for (var j = 0; j < point['length'] - 1; j++) {\n        angle = -1 > angle ? -1 : angle;\n        angle = 1 < angle ? 1 : angle;\n        var arcId_1 = this.maps.element.id + '_LayerIndex_' + layerIndex + '_NavigationIndex_' + i + '_Line' + j + '';\n        var radius_1 = this.convertRadius(point[j], point[j + 1]);\n\n        if (angle <= 1 && angle > 0) {\n          direction = 0;\n\n          if (point[j]['x'] > point[j + 1]['x']) {\n            direction = 1;\n          }\n        }\n\n        if (angle >= -1 && angle < 0) {\n          direction = 1;\n\n          if (point[j]['x'] > point[j + 1]['x']) {\n            direction = 0;\n          }\n        }\n\n        if (point[j]['x'] !== point[j + 1]['x']) {\n          if (showArrow) {\n            arrowColor = arrowSettings['properties']['color'];\n            arrowSize = arrowSettings['properties']['size'];\n            offSetValue = arrowSettings['properties']['offSet'] === undefined ? 0 : arrowSettings['properties']['offSet'];\n            var divide = Math.round(arrowSize / 2);\n            arrowPosition = arrowSettings['properties']['position'];\n            startArrow = arrowPosition === 'Start' ? 'url(#triangle' + i + ')' : null;\n            endArrow = arrowPosition === 'End' ? 'url(#triangle' + i + ')' : null;\n\n            if (offSet !== 0 && angle === 0) {\n              offSet = arrowPosition === 'Start' ? offSetValue : -offSetValue;\n            }\n\n            offSet = isNullOrUndefined(offSet) ? 0 : offSet;\n            var triId = this.maps.element.id + '_triangle';\n            var defElement = this.maps.renderer.createDefs();\n            defElement.innerHTML += '<marker id=\"' + 'triangle' + i + '\"></marker>';\n            var markerEle = defElement.querySelector('#' + 'triangle' + i);\n            markerEle.setAttribute('markerWidth', arrowSize.toString());\n            markerEle.setAttribute('markerHeight', arrowSize.toString());\n            markerEle.setAttribute('refX', (divide - offSet).toString());\n            markerEle.setAttribute('refY', divide.toString());\n            markerEle.setAttribute('orient', 'auto');\n            var d2 = 'M 0,0  L 0,' + arrowSize + ' L ' + divide + ', ' + divide + ' Z';\n            pathOption = new PathOption(triId, arrowColor, width, color, 1, 1, dashArray, d2);\n            navigationEle = this.maps.renderer.drawPath(pathOption);\n            markerEle.appendChild(navigationEle);\n            defElement.appendChild(markerEle);\n            navigationGroup.appendChild(defElement);\n          }\n\n          angle = Math.abs(angle);\n          d = angle === 0 ? 'M ' + point[j]['x'] + ',' + point[j]['y'] + 'L ' + point[j + 1]['x'] + ',' + point[j + 1]['y'] + ' ' : 'M ' + point[j]['x'] + ',' + point[j]['y'] + ' A ' + (radius_1 / 2 + (1 - angle) * radius_1 / (angle * 10)) + ' ' + (radius_1 / 2 + (1 - angle) * radius_1 / (angle * 10)) + ' ' + 0 + ',' + 0 + ',' + direction + ' , ' + point[j + 1]['x'] + ',' + point[j + 1]['y'] + ' ';\n          pathOption = new PathOption(arcId_1, 'none', width, color, 1, 1, dashArray, d);\n          navigationEle = this.maps.renderer.drawPath(pathOption);\n\n          if (!isNullOrUndefined(arrowPosition)) {\n            var position = arrowPosition === 'Start' ? navigationEle.setAttribute('marker-start', startArrow) : navigationEle.setAttribute('marker-end', endArrow);\n          }\n\n          maintainSelection(this.maps.selectedNavigationElementId, this.maps.navigationSelectionClass, navigationEle, 'navigationlineselectionMapStyle');\n          navigationGroup.appendChild(navigationEle);\n          group.appendChild(navigationGroup);\n        }\n      }\n\n      point = [];\n    }\n\n    return group;\n  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  NavigationLine.prototype.convertRadius = function (point1, point2) {\n    var value1 = point2['x'] - point1['x'];\n    var value2 = point2['y'] - point1['y'];\n    var value = Math.sqrt(Math.pow(value1, 2) + Math.pow(value2, 2));\n    return value;\n  };\n  /**\n   * Get module name.\n   *\n   * @returns {string} - Returns the module name\n   */\n\n\n  NavigationLine.prototype.getModuleName = function () {\n    return 'NavigationLine';\n  };\n  /**\n   * To destroy the layers.\n   *\n   * @param {Maps} maps - Specifies the instance of the map\n   * @returns {void}\n   * @private\n   */\n\n\n  NavigationLine.prototype.destroy = function (maps) {\n    /**\n     * Destroy method performed here\n     */\n  };\n\n  return NavigationLine;\n}();\n\nexport { NavigationLine };","map":{"version":3,"sources":["C:/Users/vinay/Desktop/world-map-dashboard/world-map/node_modules/@syncfusion/ej2-maps/src/maps/layers/navigation-selected-line.js"],"names":["convertTileLatLongToPoint","convertGeoToPoint","Point","PathOption","maintainSelection","isNullOrUndefined","NavigationLine","maps","prototype","renderNavigation","layer","factor","layerIndex","navigationEle","navigation","navigationLineSettings","longitude","point","latitude","visible","angle","width","color","dashArray","pathOption","direction","markerWidth","arcId","radius","showArrow","arrowColor","arrowSize","arrowSettings","arrowPosition","startArrow","endArrow","offSet","offSetValue","navigationGroup","d","group","renderer","createGroup","id","element","i","length","i_1","location_1","isTileMap","tileTranslatePoint","push","j","arcId_1","radius_1","convertRadius","undefined","divide","Math","round","triId","defElement","createDefs","innerHTML","markerEle","querySelector","setAttribute","toString","d2","drawPath","appendChild","abs","position","selectedNavigationElementId","navigationSelectionClass","point1","point2","value1","value2","value","sqrt","pow","getModuleName","destroy"],"mappings":"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","sourcesContent":["import { convertTileLatLongToPoint } from '../index';\nimport { convertGeoToPoint, Point, PathOption, maintainSelection } from '../utils/helper';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * navigation-selected-line\n */\nvar NavigationLine = /** @class */ (function () {\n    function NavigationLine(maps) {\n        this.maps = maps;\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To render navigation line for maps\n     */\n    NavigationLine.prototype.renderNavigation = function (layer, factor, layerIndex) {\n        var navigationEle;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var navigation = layer.navigationLineSettings;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var longitude;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var point = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var latitude;\n        var visible;\n        var angle;\n        var width;\n        var color;\n        var dashArray;\n        var pathOption;\n        var direction;\n        var markerWidth;\n        var arcId;\n        var radius;\n        var showArrow;\n        var arrowColor;\n        var arrowSize;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var arrowSettings;\n        var arrowPosition;\n        var startArrow;\n        var endArrow;\n        var offSet;\n        var offSetValue;\n        var navigationGroup;\n        var d;\n        var group = (this.maps.renderer.createGroup({\n            id: this.maps.element.id + '_LayerIndex_' + layerIndex + '_line_Group'\n        }));\n        for (var i = 0; i < navigation.length; i++) {\n            latitude = navigation[i]['properties']['latitude'];\n            longitude = navigation[i]['properties']['longitude'];\n            visible = navigation[i]['properties']['visible'];\n            angle = navigation[i]['angle'];\n            width = navigation[i]['width'] || 1;\n            color = navigation[i]['color'];\n            dashArray = navigation[i]['properties']['dashArray'];\n            arrowSettings = navigation[i]['properties']['arrowSettings'];\n            showArrow = (isNullOrUndefined(arrowSettings)) ? false : arrowSettings['properties']['showArrow'];\n            if (longitude['length'] === latitude['length'] && visible) {\n                for (var i_1 = 0; i_1 < longitude['length']; i_1++) {\n                    var location_1 = (this.maps.isTileMap) ? convertTileLatLongToPoint(new Point(longitude[i_1], latitude[i_1]), factor, this.maps.tileTranslatePoint, true) : convertGeoToPoint(latitude[i_1], longitude[i_1], factor, layer, this.maps);\n                    point.push(location_1);\n                }\n            }\n            navigationGroup = (this.maps.renderer.createGroup({\n                id: this.maps.element.id + '_LayerIndex_' + layerIndex + '_NavigationGroup' + i + ''\n            }));\n            for (var j = 0; j < point['length'] - 1; j++) {\n                angle = (-1 > angle) ? -1 : angle;\n                angle = (1 < angle) ? 1 : angle;\n                var arcId_1 = this.maps.element.id + '_LayerIndex_' + layerIndex + '_NavigationIndex_' + i + '_Line' + j + '';\n                var radius_1 = this.convertRadius(point[j], point[j + 1]);\n                if (angle <= 1 && angle > 0) {\n                    direction = 0;\n                    if (point[j]['x'] > point[j + 1]['x']) {\n                        direction = 1;\n                    }\n                }\n                if (angle >= -1 && angle < 0) {\n                    direction = 1;\n                    if (point[j]['x'] > point[j + 1]['x']) {\n                        direction = 0;\n                    }\n                }\n                if (point[j]['x'] !== point[j + 1]['x']) {\n                    if (showArrow) {\n                        arrowColor = arrowSettings['properties']['color'];\n                        arrowSize = arrowSettings['properties']['size'];\n                        offSetValue = (arrowSettings['properties']['offSet'] === undefined) ? 0 : arrowSettings['properties']['offSet'];\n                        var divide = (Math.round(arrowSize / 2));\n                        arrowPosition = arrowSettings['properties']['position'];\n                        startArrow = (arrowPosition === 'Start') ? 'url(#triangle' + i + ')' : null;\n                        endArrow = (arrowPosition === 'End') ? 'url(#triangle' + i + ')' : null;\n                        if (offSet !== 0 && angle === 0) {\n                            offSet = (arrowPosition === 'Start') ? offSetValue : -(offSetValue);\n                        }\n                        offSet = (isNullOrUndefined(offSet)) ? 0 : offSet;\n                        var triId = this.maps.element.id + '_triangle';\n                        var defElement = this.maps.renderer.createDefs();\n                        defElement.innerHTML += '<marker id=\"' + 'triangle' + i + '\"></marker>';\n                        var markerEle = defElement.querySelector('#' + 'triangle' + i);\n                        markerEle.setAttribute('markerWidth', (arrowSize.toString()));\n                        markerEle.setAttribute('markerHeight', (arrowSize.toString()));\n                        markerEle.setAttribute('refX', (divide - offSet).toString());\n                        markerEle.setAttribute('refY', divide.toString());\n                        markerEle.setAttribute('orient', 'auto');\n                        var d2 = 'M 0,0  L 0,' + arrowSize + ' L ' + divide + ', ' + divide + ' Z';\n                        pathOption = new PathOption(triId, arrowColor, width, color, 1, 1, dashArray, d2);\n                        navigationEle = this.maps.renderer.drawPath(pathOption);\n                        markerEle.appendChild(navigationEle);\n                        defElement.appendChild(markerEle);\n                        navigationGroup.appendChild(defElement);\n                    }\n                    angle = Math.abs(angle);\n                    d = (angle === 0) ? 'M ' + point[j]['x'] + ',' + point[j]['y'] + 'L ' + point[j + 1]['x']\n                        + ',' + point[j + 1]['y'] + ' ' :\n                        'M ' + point[j]['x'] + ',' + point[j]['y'] + ' A ' + (radius_1 / 2 + (1 - angle) * radius_1 / (angle * 10)) +\n                            ' ' + (radius_1 / 2 + (1 - angle) * radius_1 / (angle * 10)) + ' ' + 0 + ',' + 0 + ','\n                            + direction + ' , ' + point[j + 1]['x'] + ',' + point[j + 1]['y'] + ' ';\n                    pathOption = new PathOption(arcId_1, 'none', width, color, 1, 1, dashArray, d);\n                    navigationEle = this.maps.renderer.drawPath(pathOption);\n                    if (!isNullOrUndefined(arrowPosition)) {\n                        var position = (arrowPosition === 'Start') ? navigationEle.setAttribute('marker-start', startArrow)\n                            : navigationEle.setAttribute('marker-end', endArrow);\n                    }\n                    maintainSelection(this.maps.selectedNavigationElementId, this.maps.navigationSelectionClass, navigationEle, 'navigationlineselectionMapStyle');\n                    navigationGroup.appendChild(navigationEle);\n                    group.appendChild(navigationGroup);\n                }\n            }\n            point = [];\n        }\n        return group;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    NavigationLine.prototype.convertRadius = function (point1, point2) {\n        var value1 = point2['x'] - point1['x'];\n        var value2 = point2['y'] - point1['y'];\n        var value = Math.sqrt((Math.pow(value1, 2) + Math.pow(value2, 2)));\n        return value;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    NavigationLine.prototype.getModuleName = function () {\n        return 'NavigationLine';\n    };\n    /**\n     * To destroy the layers.\n     *\n     * @param {Maps} maps - Specifies the instance of the map\n     * @returns {void}\n     * @private\n     */\n    NavigationLine.prototype.destroy = function (maps) {\n        /**\n         * Destroy method performed here\n         */\n    };\n    return NavigationLine;\n}());\nexport { NavigationLine };\n"]},"metadata":{},"sourceType":"module"}